<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="channelsRabbitMQ" type="Channels.RabbitMQ.Configuration.ChannelsRabbitMQConfigurationSection, Channels.RabbitMQ" />
    <section name="codeProbe" type="CodeProbe.Configuration.CodeProbeConfigurationSection, CodeProbe" />
    <section name="quartz" type="System.Configuration.NameValueSectionHandler, System, Version=1.0.5000.0,Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
  </configSections>
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1215">
        <arg key="configType" value="FILE-WATCH" />
        <arg key="configFile" value="~/log4net.config" />
      </factoryAdapter>
    </logging>
  </common>
  <channelsRabbitMQ>
    <connection hostName="Code.test.aliaslab.net" virtualHost="channels-lib" port="5672" userName="admin" password="admin">
      <hostNamesPool>
      </hostNamesPool>
    </connection>
  </channelsRabbitMQ>
  <codeProbe>
    <reporting>
    </reporting>
    <remoteReporting remoteExtractorNamePrefix="remote" probeServiceBindingName="ProbeServiceWebHttpBinding">
      <probeServiceAggregators>
      </probeServiceAggregators>
      <probeServices>
        <add name="Code.Scheduler.Service.ProbeService">
          <sampler name="test_remote_sampler" type="CodeProbe.Reporting.Samplers.BasicSampler, CodeProbe.Reporting">
            <stats>
              <add type="CodeProbe.Reporting.Statistics.Gauge.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Counter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Meter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMaxStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMaxStatistic, CodeProbe.Reporting" />
            </stats>
          </sampler>
          <checkAllPolicy type="CodeProbe.HealthChecks.Policy.ZeroNullCheckAllPolicy, CodeProbe.HealthChecks" />
        </add>
      </probeServices>
    </remoteReporting>
    <healthchecks>
    </healthchecks>
    <sensing>
      <reservoir type="CodeProbe.Sensing.SlidingWindowReservoir`1, CodeProbe">
        <args>
          <add name="size" value="100" />
        </args>
      </reservoir>
    </sensing>
  </codeProbe>
  <quartz>
    <!-- @@@@@@@@@@@@@@@@@@@@@@@@ logging @@@@@@@@@@@@@@@@@@@@@@@@ -->
    <add key="log4net.Config" value="log4net.config" />
    <add key="log4net.Config.Watch" value="True" />
    <!-- @@@@@@@@@@@@@@@@@@@@@@@@ logging @@@@@@@@@@@@@@@@@@@@@@@@ -->
    <add key="quartz.scheduler.instanceName" value="QuartzScheduler" />
    <add key="quartz.scheduler.instanceId" value="AUTO" />
    <add key="quartz.threadPool.type" value="Quartz.Simpl.SimpleThreadPool, Quartz" />
    <add key="quartz.threadPool.threadCount" value="10" />
    <add key="quartz.threadPool.threadPriority" value="2" />
    
    <add key="quartz.jobStore.misfireThreshold" value="60000" />
    <!--<add key="quartz.jobStore.type" value="Quartz.Simpl.RAMJobStore, Quartz" />-->
    <add key="quartz.jobStore.type" value="Quartz.Impl.AdoJobStore.JobStoreTX, Quartz" />
    <add key="quartz.jobStore.dataSource" value="default" />
    <add key="quartz.jobStore.driverDelegateType" value="Quartz.Impl.AdoJobStore.SqlServerDelegate, Quartz" />
    <add key="quartz.jobStore.lockHandler.type" value="Quartz.Impl.AdoJobStore.UpdateLockRowSemaphore, Quartz" />
    <add key="quartz.jobStore.tablePrefix" value="QRTZ_" />
    <add key="quartz.jobStore.useProperties" value="true" />
    <add key="quartz.jobStore.clustered" value="true" />
    
    <add key="quartz.dataSource.default.connectionString" value="Data Source=sql2012.aliaslab.net;Initial Catalog=Code.Provisioning;User ID=sa_idsign;Password=sa_idsign;" />
    <add key="quartz.dataSource.default.provider" value="SqlServer-20" />
  </quartz>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="readTimeoutMillis" value="300000" />
    <add key="writeTimeoutMillis" value="300000" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5.2" />
    <httpRuntime targetFramework="4.5.2" />
  </system.web>
  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <add name="ExecutionContextSpan" type="CodeProbe.ExecutionControl.ExecutionContextSpanBehaviorExtensionElement, CodeProbe.ExecutionControl" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="ContextSpan">
          <ExecutionContextSpan />
        </behavior>
        <behavior name="restJsonConfSpan">
          <webHttp defaultOutgoingResponseFormat="Json" />
          <ExecutionContextSpan />
        </behavior>
        <behavior name="restXmlConfSpan">
          <webHttp defaultOutgoingResponseFormat="Xml" />
          <ExecutionContextSpan />
        </behavior>
        <behavior name="restJsonConf">
          <webHttp defaultOutgoingResponseFormat="Json" />
        </behavior>
        <behavior name="restXmlConf">
          <webHttp defaultOutgoingResponseFormat="Xml" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
    <bindings>
      <webHttpBinding>
        <binding name="ProbeServiceWebHttpBinding" maxBufferSize="104857600" maxBufferPoolSize="104857600" maxReceivedMessageSize="104857600">
          <readerQuotas maxDepth="100" maxStringContentLength="104857600" maxArrayLength="104857600" maxBytesPerRead="104857600" maxNameTableCharCount="104857600" />
        </binding>
      </webHttpBinding>
    </bindings>
    <services>
      <service name="Code.Scheduler.Service.ProbeService">
        <endpoint behaviorConfiguration="restJsonConf" binding="webHttpBinding" bindingName="ProbeServiceWebHttpBinding" contract="CodeProbe.Reporting.Remote.IProbeService" />
        <endpoint address="soap" binding="basicHttpBinding" bindingName="ProbeServiceWebHttpBinding" contract="CodeProbe.Reporting.Remote.IProbeService" />
      </service>
    </services>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>

  <runtime>

    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">

      <dependentAssembly>

        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />

        <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0" />

      </dependentAssembly>

    </assemblyBinding>

  </runtime>
</configuration>
